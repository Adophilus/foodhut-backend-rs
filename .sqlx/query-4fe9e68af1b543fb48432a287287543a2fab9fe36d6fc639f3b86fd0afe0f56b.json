{
  "db_name": "PostgreSQL",
  "query": "\n            WITH filtered_data AS (\n                SELECT carts.id,\n                       carts.status,\n                       carts.owner_id,\n                       carts.created_at,\n                       carts.updated_at,\n                       COALESCE(\n                           JSONB_AGG(\n                               JSONB_BUILD_OBJECT(\n                                   'meal_id', cart_items.meal_id,\n                                   'quantity', cart_items.quantity,\n                                   'meal', JSONB_BUILD_OBJECT(\n                                       'id', meals.id,\n                                       'name', meals.name,\n                                       'description', meals.description,\n                                       'rating', meals.rating,\n                                       'price', meals.price,\n                                       'likes', meals.likes,\n                                       'cover_image', meals.cover_image,\n                                       'is_available', meals.is_available,\n                                       'kitchen_id', meals.kitchen_id,\n                                       'created_at', meals.created_at,\n                                       'updated_at', meals.updated_at\n                                   )\n                               )\n                           ) FILTER (WHERE cart_items.meal_id IS NOT NULL),\n                           '[]'::jsonb\n                       ) AS items\n                FROM carts\n                LEFT JOIN LATERAL jsonb_to_recordset(carts.items::jsonb) AS cart_items(meal_id TEXT, quantity INT) ON true\n                LEFT JOIN meals ON cart_items.meal_id = meals.id\n                WHERE\n                    ($3::TEXT IS NULL OR carts.owner_id = $3)\n                    AND ($4::TEXT IS NULL OR carts.status = $4)\n                GROUP BY carts.id\n                LIMIT $1\n                OFFSET $2\n            ),\n            total_count AS (\n                SELECT COUNT(id) AS total_rows\n                FROM carts\n                WHERE\n                    ($3::TEXT IS NULL OR owner_id = $3)\n                    AND ($4::TEXT IS NULL OR status = $4)\n            )\n            SELECT \n                COALESCE(JSONB_AGG(ROW_TO_JSON(filtered_data)), '[]'::jsonb) AS items,\n                JSONB_BUILD_OBJECT(\n                    'total', (SELECT total_rows FROM total_count),\n                    'per_page', $1,\n                    'page', $2 / $1 + 1\n                ) AS meta\n            FROM filtered_data;\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "items",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 1,
        "name": "meta",
        "type_info": "Jsonb"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Int8",
        "Text",
        "Text"
      ]
    },
    "nullable": [
      null,
      null
    ]
  },
  "hash": "4fe9e68af1b543fb48432a287287543a2fab9fe36d6fc639f3b86fd0afe0f56b"
}
